[General]
image-path = images

*.source.numApps = 1
*.source.app[0].typename = "PingApp"
*.source.app[0].destAddr = "destination"
*.source.app[0].sendInterval = 0.5s			# is this needed here?
**.printPing = true

# data link visualizer
*.visualizer.*.numDataLinkVisualizers = 5
*.visualizer.*.dataLinkVisualizer[*].activityLevel = "peer"
*.visualizer.*.dataLinkVisualizer[*].displayLinks = true
*.visualizer.*.dataLinkVisualizer[0].packetFilter = "AodvRreq or GPSRBeacon"
*.visualizer.*.dataLinkVisualizer[1].packetFilter = "ping* or UDP*"		# is the UDP needed?
*.visualizer.*.dataLinkVisualizer[1].*Color = "blue"
*.visualizer.*.dataLinkVisualizer[2].packetFilter = "AodvRrep"
*.visualizer.*.dataLinkVisualizer[2].*Color = "darkslategray"
*.visualizer.*.dataLinkVisualizer[3].packetFilter = "AodvRerr"
*.visualizer.*.dataLinkVisualizer[3].*Color = "red"
*.visualizer.*.dataLinkVisualizer[4].packetFilter = "Hello"
*.visualizer.*.dataLinkVisualizer[4].*Color = "green"
#*.visualizer.*.dataLinkVisualizer[*].fadeOutMode = "animationTime"

# misc
**.wlan[*].bitrate = 24Mbps
**.transmitter.power = 5mW
*.configurator.addStaticRoutes = false
**.netmaskRoutes = ""
**.arpType = "GlobalArp"

[Config Gpsr]
network = ManetprotocolsShowcaseA

*.*.routingProtocolType = "Gpsr"

**.planarizationMode = "RNG"	# is this needed?

**.transmitter.power = 1.25mW

*.visualizer.*.networkRouteVisualizer[0].displayRoutes = true
*.visualizer.*.networkRouteVisualizer[0].packetFilter = "*ping*"

*.source.app[0].sendInterval = 1s		# is it needed?

[Config MovingNodesBaseConfig]
network = ManetprotocolsShowcaseB

**.transmitter.power = 1mW

# node movement
*.node*.mobilityType = "LinearMobility"
*.node*.mobility.angle = uniform(0deg,360deg)
*.node*.mobility.speed = 25mps

**.constraintAreaMaxX = 400m
**.constraintAreaMaxY = 400m
**.constraintAreaMinX = 0
**.constraintAreaMinY = 0

*.visualizer.*.routingTableVisualizer[0].displayRoutingTables = true
*.visualizer.*.routingTableVisualizer[0].displayLabels = false
*.visualizer.*.routingTableVisualizer[0].displayRoutesIndividually = false
*.visualizer.*.routingTableVisualizer[0].lineShift = 0

*.visualizer.*.networkRouteVisualizer[0].displayRoutes = true
*.visualizer.*.networkRouteVisualizer[0].packetFilter = "*ping*"
#*.visualizer.*.networkRouteVisualizer[0].fadeOutMode = "animationTime"

*.visualizer.*.interfaceTableVisualizer[0].displayInterfaceTables = true
*.visualizer.*.interfaceTableVisualizer[0].format = "%a/%l"

[Config Aodv]
extends = MovingNodesBaseConfig

*.*.routingProtocolType = "Aodv"

# routing protocol parameters
# activeRouteTimeOut lower
*.*.routing.activeRouteTimeout = 1s	# these are lowered from default 3s and 15s
*.*.routing.deletePeriod = 0.5s		# to better react to rapidly changing network topology
									# (so routes expire more quickly)

*.source.app[0].sendInterval = 1s		# does this change anything? yes

[Config Dsdv]
extends = MovingNodesBaseConfig

# seems like the network is changing too fast
# dsdv should send hello messages more frequently?

# HelloMsgPeriod and RouteLifeTime lower

*.*.routing.helloInterval = 1s		# should react faster
*.*.routing.routeLifetime = 1s

*.*.routingProtocolType = "Dsdv"

#**.numWlanInterfaces = 1

#**.wlan[*].mgmtType = "Ieee80211MgmtAdhoc"

#**.forwarding = true

#*.source.multicastForwarding = true
#
#**.multicastForwarding = true

**.routing.routingTableModule = "^.ipv4.routingTable"			# is this needed?
**.routing.interfaceTableModule = "^.interfaceTable"

[Config BaseStatisticConfig]
network = ManetprotocolsShowcaseMoreNodes
sim-time-limit = 50s
num-rngs = 2
#fingerprint = 0000-0000
#record-eventlog = true
#**.cmdenv-log-level = error

**.transmitter.power = 1.5mW

# node movement
*.node*.mobilityType = "LinearMobility"
*.node*.mobility.angle = uniform(0deg,360deg)
*.node*.mobility.speed = 25mps
*.node*.mobility.rng-0 = 1
seed-1-mt = 1
**.vector-recording = false

**.constraintAreaMaxX = 400m
**.constraintAreaMaxY = 400m
**.constraintAreaMinX = 0
**.constraintAreaMinY = 0

*.visualizer.*.routingTableVisualizer[0].displayRoutingTables = true
*.visualizer.*.routingTableVisualizer[0].displayLabels = false
*.visualizer.*.routingTableVisualizer[0].displayRoutesIndividually = false
*.visualizer.*.routingTableVisualizer[0].lineShift = 0

*.visualizer.*.networkRouteVisualizer[0].displayRoutes = true
*.visualizer.*.networkRouteVisualizer[0].packetFilter = "*Udp*"

*.visualizer.*.numDataLinkVisualizers = 2
*.visualizer.*.dataLinkVisualizer[0].packetFilter = "not (ACK or Aodv* or Hello or *GPSR*)"
*.visualizer.*.dataLinkVisualizer[1].displayLinks = true
*.visualizer.*.dataLinkVisualizer[1].packetFilter = "Aodv* or Hello or *GPSR*"
*.visualizer.*.dataLinkVisualizer[1].*Color = "yellow"

*.source.app[0].typename = "UdpBasicApp"
*.source.app[0].localPort = 1000
*.source.app[0].destAddresses = "destination"
*.source.app[0].destPort = 1000
*.source.app[0].messageLength = 1000Byte
*.source.app[0].sendInterval = 2ms

*.destination.numApps = 1
*.destination.app[0].typename = "UdpSink"
*.destination.app[0].localPort = 1000

**.wlan[*].bitrate = 6Mbps

**.displayCommunicationRanges = true

[Config StatisticAodv]
extends = BaseStatisticConfig

*.*.routingProtocolType = "Aodv"

# activeRouteTimeOut lower
#*.*.routing.activeRouteTimeout = 1s	# these are lowered from default 3s and 15s
#*.*.routing.deletePeriod = 0.5s		# to better react to rapidly changing network topology
#repeat = 10
#									# (so routes expire more quickly)

*.*.routing.activeRouteTimeout = ${activeRouteTimeout=0.05..1 step 0.05, 2..10 step 1}s
*.*.routing.deletePeriod = ${deletePeriod=0.05..1 step 0.05, 2..10 step 2}s

[Config StatisticAodv2]
extends = BaseStatisticConfig

*.*.routingProtocolType = "Aodv"

# activeRouteTimeOut lower
#*.*.routing.activeRouteTimeout = 1s	# these are lowered from default 3s and 15s
#*.*.routing.deletePeriod = 0.5s		# to better react to rapidly changing network topology
#repeat = 10
#									# (so routes expire more quickly)

*.*.routing.activeRouteTimeout = ${activeRouteTimeout=0.05..1 step 0.05, 2..10 step 1}s
*.*.routing.deletePeriod = ${deletePeriod=0.05..1 step 0.05, 2..10 step 2}s

[Config StatisticAodv3]
extends = BaseStatisticConfig

*.*.routingProtocolType = "Aodv"

# activeRouteTimeOut lower
#*.*.routing.activeRouteTimeout = 1s	# these are lowered from default 3s and 15s
#*.*.routing.deletePeriod = 0.5s		# to better react to rapidly changing network topology
repeat = 10
#									# (so routes expire more quickly)

*.*.routing.activeRouteTimeout = ${activeRouteTimeout=0.05..1 step 0.05, 2..10 step 1}s

[Config StatisticAodv3Uniform]
extends = BaseStatisticConfig

*.*.routingProtocolType = "Aodv"

# activeRouteTimeOut lower
#*.*.routing.activeRouteTimeout = 1s	# these are lowered from default 3s and 15s
#*.*.routing.deletePeriod = 0.5s		# to better react to rapidly changing network topology
repeat = 10
#									# (so routes expire more quickly)

#*.*.routing.activeRouteTimeout = ${activeRouteTimeout=0.05..1 step 0.05, 2..10 step 1}s
*.*.routing.activeRouteTimeout = ${activeRouteTimeout=0.25..10 step 0.25}s

[Config StatisticDsdv]
extends = BaseStatisticConfig

*.*.routingProtocolType = "Dsdv"
#repeat = 10

#*.*.routing.helloInterval = 1s		# should react faster
#*.*.routing.routeLifetime = 1s

*.*.routing.helloInterval = ${helloInterval=0.2..1 step 0.2, 2..10 step 1}s
*.*.routing.routeLifetime = ${routeLifetime=0.2..1 step 0.2, 2..10 step 1}s

[Config StatisticDsdvDefault]
extends = BaseStatisticConfig
description = "helloInterval = routeLifetime"

*.*.routingProtocolType = "Dsdv"

repeat = 10

*.*.routing.helloInterval = ${helloInterval=0.2..1 step 0.2, 2..10 step 1}s
*.*.routing.routeLifetime = ${helloInterval}s

[Config StatisticDsdvHelloInterval]
extends = BaseStatisticConfig
description = "routeLifetime left on default (5s)"

*.*.routingProtocolType = "Dsdv"

repeat = 10

*.*.routing.helloInterval = ${helloInterval=0.2..1 step 0.2, 2..10 step 1}s

[Config StatisticDsdvHelloInterval_2]
extends = BaseStatisticConfig
description = "routeLifetime left on default (5s)"

*.*.routingProtocolType = "Dsdv"

repeat = 10

*.*.routing.helloInterval = ${helloInterval=0.1..10 step 0.1}s

[Config StatisticDsdvRouteLifetime]
extends = BaseStatisticConfig
description = "helloInterval left on default (5s)"

*.*.routingProtocolType = "Dsdv"

repeat = 10

*.*.routing.routeLifetime = ${routeLifetime=0.2..1 step 0.2, 2..10 step 1}s

[Config StatisticDsdvOneParameter]
extends = BaseStatisticConfig
description = "routeLifetime = 5 * helloInterval"

*.*.routingProtocolType = "Dsdv"

repeat = 10

*.*.routing.helloInterval = ${helloInterval=0.2..1 step 0.2, 2..10 step 1}s
*.*.routing.routeLifetime = ${helloInterval}s

[Config StatisticGpsr]
extends = BaseStatisticConfig

*.*.routingProtocolType = "Gpsr"
#repeat = 10

#**.beaconInterval = 0.1s
#**.neighborValidityInterval = 0.11s
#**.maxJitter = 0.001s

**.beaconInterval = ${beaconInterval=0.05..1 step 0.05, 2..10 step 1}s
**.maxJitter = ${maxJitter=0.0005,0.001,0.005,0.01,0.05,0.1,0.25,0.5,1}s

[Config StatisticGpsr2]
extends = BaseStatisticConfig

*.*.routingProtocolType = "Gpsr"
#repeat = 10

#**.beaconInterval = 0.1s
#**.neighborValidityInterval = 0.11s
#**.maxJitter = 0.001s

**.beaconInterval = ${beaconInterval=0.05..1 step 0.05, 2..10 step 1}s
#**.maxJitter = ${maxJitter=0.0005,0.001,0.005,0.01,0.05,0.1,0.25,0.5,1}s
**.neighborValidityInterval = ${neighborValidityInterval=1,5,10,15,20,25,30,35,40,45,50}s

[Config StatisticGpsr3]
extends = BaseStatisticConfig

*.*.routingProtocolType = "Gpsr"
#repeat = 10

#**.beaconInterval = 0.1s
#**.neighborValidityInterval = 0.11s
#**.maxJitter = 0.001s

**.beaconInterval = ${beaconInterval=0.05..1 step 0.05, 2..10 step 1}s
#**.maxJitter = ${maxJitter=0.0005,0.001,0.005,0.01,0.05,0.1,0.25,0.5,1}s
#**.neighborValidityInterval = ${neighborValidityInterval=1,5,10,15,20,25,30,35,40,45,50}s
**.neighborValidityInterval = ${neighborValidityInterval=0.1..1 step 0.1,1.2..2 step 0.2,2.5..5 step 0.5,7,10}s

[Config StatisticOneParameterGpsr]
extends = BaseStatisticConfig

# optimize for one parameter, the other one, neighborValidityInterval, is fixed, 4.5 * beaconInterval
# which is the default value of the parameter, so nothing needs to be set

*.*.routingProtocolType = "Gpsr"

repeat = 10

**.beaconInterval = ${beaconInterval=0.05..1 step 0.05, 2..10 step 1}s

[Config StatisticOneParameterGpsrUniform]
extends = BaseStatisticConfig

# optimize for one parameter, the other one, neighborValidityInterval, is fixed, 4.5 * beaconInterval
# which is the default value of the parameter, so nothing needs to be set

*.*.routingProtocolType = "Gpsr"

repeat = 10

**.beaconInterval = ${beaconInterval=0.25..10 step 0.25}s		# about 40 runs (*10 for the repetition -> 400 runs)


[Config BestAodv]
extends = BaseStatisticConfig

*.*.routingProtocolType = "Aodv"

repeat = 10

*.*.routing.activeRouteTimeout = 9s
*.*.routing.deletePeriod = 0.1s

**.app[0].**.vector-recording = true
**.vector-recording = false

[Config BestDsdv]
extends = BaseStatisticConfig

*.*.routingProtocolType = "Dsdv"

repeat = 10

*.*.routing.helloInterval = 0.8s
*.*.routing.routeLifetime = 8s

**.app[0].**.vector-recording = true
**.vector-recording = false

[Config BestGpsr]
extends = BaseStatisticConfig

*.*.routingProtocolType = "Gpsr"

repeat = 10

#**.beaconInterval = 3s
#**.maxJitter = 1s

**.beaconInterval = 0.5s
**.maxJitter = 1s
**.neighborValidityInterval = 5s

**.app[0].**.vector-recording = true
**.vector-recording = false

[Config UniformDsdv]
extends = BaseStatisticConfig
description = "A version of StatisticDsdv, with one of the parameters having a uniform stepping"

*.*.routingProtocolType = "Dsdv"
#repeat = 10

#*.*.routing.helloInterval = 1s		# should react faster
#*.*.routing.routeLifetime = 1s

*.*.routing.helloInterval = ${helloInterval=0.2..1 step 0.2, 2..10 step 1}s
*.*.routing.routeLifetime = ${routeLifetime=0.2..10 step 0.2}s

[Config StatisticDymo]
extends = BaseStatisticConfig

*.*.routingProtocolType = "Dymo"

**.routing.interfaceTableModule = "^.interfaceTable"

*.*.routing.activeInterval = ${activeInterval=0.25..10 step 0.25}s

**.crcMode = "computed"
**.fcsMode = "computed"