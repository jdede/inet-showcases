[Config SensorNetworkShowcaseBase]
network = SensorNetworkShowcaseB

**.wlan[*].typename = "WirelessInterface"
**.wlan[*].radioType = "ApskScalarRadio"

#*.gateway.wlan[*].typename = "WirelessInterface"
#*.gateway.wlan[*].radioType = "ApskScalarRadio"
#*.gateway.wlan[*].macType = "BMac"
#
#*.gateway.wlan[*].radioType = "ApskScalarRadio"
#*.gateway.wlan[*].mac.typename = "BMac"

*.radioMedium.backgroundNoise.power = -110dBm

**.mac.slotDuration = 1s
**.mac.headerLength = 8b

**.radio.carrierFrequency = 2.45GHz
**.radio.bandwidth = 2.8MHz

**.radio.transmitter.bitrate = 19200 bps
**.radio.transmitter.headerLength = 8b
**.radio.transmitter.preambleDuration = 0.0001s
**.radio.transmitter.power = 2.24mW

**.radio.receiver.energyDetection = -90dBm
**.radio.receiver.sensitivity = -100dBm
**.radio.receiver.snirThreshold = -8dB

*.visualizer.*.infoVisualizer.modules = "*.server.app[0]"
*.visualizer.*.infoVisualizer.format = "%d"

#*.visualizer.*.infoVisualizer.displayInfos = true
#*.visualizer.*.infoVisualizer.modules = "*.*.wlan*.mac"
#*.visualizer.*.infoVisualizer.format = "%d"

#**.wlan[*].mac.animation = false

*.sensor*.numApps = 1
*.sensor*.app[0].typename = "UdpBasicApp"
*.sensor*.app[0].destAddresses = "server"		# should be the server eventually
*.sensor*.app[0].destPort = 1000
*.sensor*.app[0].sendInterval = 1s
*.sensor*.app[0].startTime = exponential(1s)	# not sure its needed
*.sensor*.app[0].messageLength = 10Byte

*.server.numApps = 1
*.server.app[0].typename = "UdpSink"
*.server.app[0].localPort = 1000

*.gateway.forwarding = true

#*.visualizer.*.mediumVisualizer.displaySignals = true

*.visualizer.*.routingTableVisualizer.displayRoutingTables = true
*.visualizer.*.routingTableVisualizer.lineShift = 1
*.visualizer.*.routingTableVisualizer.lineContactSpacing = 0.5

#*.configurator.config = xmldoc("config.xml")

**.arpType = "GlobalArp"

[Config BMac]
extends = SensorNetworkShowcaseBase

**.wlan[*].macType = "BMac"

[Config LMac]
extends = SensorNetworkShowcaseBase

**.wlan[*].macType = "LMac"

[Config XMac]
extends = SensorNetworkShowcaseBase

**.wlan[*].macType = "XMac"

[Config Zigbee]
network = SensorNetworkShowcaseB

*.radioMedium.backgroundNoise.power = -110dBm
**.wlan[*].typename = "WirelessInterface"
**.wlan[*].radioType = "Ieee802154NarrowbandScalarRadio"
**.wlan[*].macType = "Ieee802154Mac"

*.gateway.forwarding = true

*.sensor*.numApps = 1
*.sensor*.app[0].typename = "UdpBasicApp"
*.sensor*.app[0].destAddresses = "server"		# should be the server eventually
*.sensor*.app[0].destPort = 1000
*.sensor*.app[0].sendInterval = 10s
*.sensor*.app[0].startTime = exponential(10s)	# not sure its needed
*.sensor*.app[0].messageLength = 10Byte

*.server.numApps = 1
*.server.app[0].typename = "UdpSink"
*.server.app[0].localPort = 1000

**.useMACAcks = false							# ACKs don't seem to work (networkProtocol = -1 -> unknown protocol)
**.arpType = "GlobalArp"

#**.displayRoutingTables = true
*.visualizer.*.routingTableVisualizer.displayRoutesIndividually = false
*.visualizer.*.routingTableVisualizer.lineShift = 0

*.visualizer.*.dataLinkVisualizer.displayLinks = true
#*.visualizer.*.dataLinkVisualizer.activityLevel = "peer"
*.visualizer.*.physicalLinkVisualizer.displayLinks = true

*.visualizer.*.infoVisualizer.displayInfos = true
*.visualizer.*.infoVisualizer.modules = "*.server.app[0]"
*.visualizer.*.infoVisualizer.format = "%d"

[Config ZigbeePowerConsumption]
extends = Zigbee
network = SensorNetworkShowcaseC

## Cc based
#*.sensor*.energyStorageType = "SimpleCcBattery"
#*.sensor*.energyStorage.nominalCapacity = 80C	# Coin cell battery
#*.sensor*.energyStorage.initialCapacity = exponential(40C)
#*.sensor*.energyStorage.nominalVoltage = 1.5V
#*.sensor*.energyStorage.internalResistance = 1Ohm
#*.sensor*.wlan[*].radio.energyConsumerType = "StateBasedCcEnergyConsumer"

# Ep based
*.sensor*.energyStorageType = "SimpleEpEnergyStorage"
*.sensor*.energyStorage.nominalCapacity = 3J	# Coin cell battery
*.sensor*.energyStorage.initialCapacity = 3J
#*.sensor*.energyStorage.initialCapacity = uniform(0,1)*3J
*.sensor*.wlan[*].radio.energyConsumerType = "StateBasedEpEnergyConsumer"
*.sensor*.energyManagementType = "SimpleEpEnergyManagement"

*.visualizer.*.energyStorageVisualizer.displayEnergyStorages = true

**.hasStatus = true

[Config ZigbeeNedType]
network = SensorNetworkShowcaseD

#*.radioMedium.backgroundNoise.power = -110dBm

**.wlan[*].macType = "Ieee802154Mac"

*.gateway.forwarding = true

*.sensor*.numApps = 1
*.sensor*.app[0].typename = "UdpBasicApp"
*.sensor*.app[0].destAddresses = "server"		# should be the server eventually
*.sensor*.app[0].destPort = 1000
*.sensor*.app[0].sendInterval = 10s
*.sensor*.app[0].startTime = exponential(10s)	# not sure its needed
*.sensor*.app[0].messageLength = 10Byte
*.sensor1.app[0].packetName = "sensor1-data"
*.sensor2.app[0].packetName = "sensor2-data"
*.sensor3.app[0].packetName = "sensor3-data"
*.sensor4.app[0].packetName = "sensor4-data"

*.server.numApps = 1
*.server.app[0].typename = "UdpSink"
*.server.app[0].localPort = 1000

**.useMACAcks = false							# ACKs don't seem to work (networkProtocol = -1 -> unknown protocol)
**.arpType = "GlobalArp"

#**.displayRoutingTables = true
*.visualizer.*.routingTableVisualizer.displayRoutesIndividually = false
*.visualizer.*.routingTableVisualizer.lineShift = 0

#*.visualizer.*.dataLinkVisualizer.displayLinks = true
#*.visualizer.*.dataLinkVisualizer.activityLevel = "peer"
#*.visualizer.*.physicalLinkVisualizer.displayLinks = true

*.visualizer.*.networkRouteVisualizer.displayRoutes = true

*.visualizer.*.*.lineShift = 1
*.visualizer.*.*.lineContactSpacing = 1

*.visualizer.*.infoVisualizer.displayInfos = true
*.visualizer.*.infoVisualizer.modules = "*.server.app[0]"
*.visualizer.*.infoVisualizer.format = "%d"

[Config ZigbeeNedTypePowerConsumption]
extends = ZigbeeNedType
network = SensorNetworkShowcaseE

# Ep based
*.sensor*.energyStorageType = "SimpleEpEnergyStorage"
*.sensor*.energyStorage.nominalCapacity = 3J	# Coin cell battery
*.sensor*.energyStorage.initialCapacity = 3J
#*.sensor*.energyStorage.initialCapacity = uniform(0,1)*3J
*.sensor*.wlan[*].radio.energyConsumerType = "StateBasedEpEnergyConsumer"
*.sensor*.energyManagementType = "SimpleEpEnergyManagement"

# should the gateway also run on batteries?
*.gateway.energyStorageType = "SimpleEpEnergyStorage"
*.gateway.energyStorage.nominalCapacity = 3J	# Coin cell battery
*.gateway.energyStorage.initialCapacity = 3J
#*.gateway.energyStorage.initialCapacity = uniform(0,1)*3J
*.gateway.wlan[*].radio.energyConsumerType = "StateBasedEpEnergyConsumer"
*.gateway.energyManagementType = "SimpleEpEnergyManagement"

*.visualizer.*.energyStorageVisualizer.displayEnergyStorages = true

**.hasStatus = true

[Config Ieee802154BMac]
extends = ZigbeeNedType

# this seems to work

**.wlan[*].macType = "BMac"

[Config Ieee802154LMac]
extends = ZigbeeNedType

# works eventually

**.wlan[*].macType = "LMac"

[Config Ieee802154XMac]
extends = ZigbeeNedType

# not working

**.wlan[*].macType = "XMac"
**.wlan[*].mac.animation = false

[Config Ieee802154UWBIR]
network = SensorNetworkShowcaseF

*.radioMedium.backgroundNoise.power = -110dBm
**.wlan[*].typename = "Ieee802154UwbIrInterface"
#**.wlan[*].radioType = "Ieee802154NarrowbandScalarRadio"
#**.wlan[*].macType = "Ieee802154Mac"

*.gateway.forwarding = true

*.sensor*.numApps = 1
*.sensor*.app[0].typename = "UdpBasicApp"
*.sensor*.app[0].destAddresses = "server"		# should be the server eventually
*.sensor*.app[0].destPort = 1000
*.sensor*.app[0].sendInterval = 10s
*.sensor*.app[0].startTime = exponential(10s)	# not sure its needed
*.sensor*.app[0].messageLength = 10Byte

*.server.numApps = 1
*.server.app[0].typename = "UdpSink"
*.server.app[0].localPort = 1000

**.useMACAcks = false							# ACKs don't seem to work (networkProtocol = -1 -> unknown protocol)
**.arpType = "GlobalArp"

#**.displayRoutingTables = true
*.visualizer.*.routingTableVisualizer.displayRoutesIndividually = false
*.visualizer.*.routingTableVisualizer.lineShift = 0

*.visualizer.*.dataLinkVisualizer.displayLinks = true
#*.visualizer.*.dataLinkVisualizer.activityLevel = "peer"
*.visualizer.*.physicalLinkVisualizer.displayLinks = true

*.visualizer.*.infoVisualizer.displayInfos = true
*.visualizer.*.infoVisualizer.modules = "*.server.app[0]"
*.visualizer.*.infoVisualizer.format = "%d"

[Config SensorNetworkLamps]
network = SensorNetworkG

[Config SensorNetworkLamps2]
network = SensorNetworkShowcaseH
description = "base network with an appartment floorplan as the background, sensors, lamps and controller"

**.wlan[*].typename = "WirelessInterface"
**.wlan[*].radioType = "ApskScalarRadio"

#*.gateway.wlan[*].typename = "WirelessInterface"
#*.gateway.wlan[*].radioType = "ApskScalarRadio"
#*.gateway.wlan[*].macType = "BMac"
#
#*.gateway.wlan[*].radioType = "ApskScalarRadio"
#*.gateway.wlan[*].mac.typename = "BMac"

*.radioMedium.backgroundNoise.power = -110dBm

**.mac.slotDuration = 1s
**.mac.headerLength = 8b

**.radio.carrierFrequency = 2.45GHz
**.radio.bandwidth = 2.8MHz

**.radio.transmitter.bitrate = 19200 bps
**.radio.transmitter.headerLength = 8b
**.radio.transmitter.preambleDuration = 0.0001s
**.radio.transmitter.power = 2.24mW

**.radio.receiver.energyDetection = -90dBm
**.radio.receiver.sensitivity = -100dBm
**.radio.receiver.snirThreshold = -8dB

*.visualizer.*.infoVisualizer.modules = "*.lamp*.app[0]"
*.visualizer.*.infoVisualizer.format = "%d"

#*.visualizer.*.infoVisualizer.displayInfos = true
#*.visualizer.*.infoVisualizer.modules = "*.*.wlan*.mac"
#*.visualizer.*.infoVisualizer.format = "%d"

#**.wlan[*].mac.animation = false

*.sensor1.numApps = 1
*.sensor2.numApps = 1
*.sensor3.numApps = 2
*.sensor*.app[*].typename = "UdpBasicApp"

*.sensor1.app[0].destAddresses = "lamp1"
*.sensor1.app[0].destPort = 1000
*.sensor1.app[0].sendInterval = 1s
*.sensor1.app[0].startTime = exponential(1s)
*.sensor1.app[0].messageLength = 10Byte

*.sensor2.app[0].destAddresses = "lamp2"
*.sensor2.app[0].destPort = 1000
*.sensor2.app[0].sendInterval = 1s
*.sensor2.app[0].startTime = exponential(1s)
*.sensor2.app[0].messageLength = 10Byte

*.sensor3.app[0].destAddresses = "lamp3"
*.sensor3.app[0].destPort = 1000
*.sensor3.app[0].sendInterval = 1s
*.sensor3.app[0].startTime = exponential(1s)
*.sensor3.app[0].messageLength = 10Byte

*.sensor3.app[1].destAddresses = "lamp4"
*.sensor3.app[1].destPort = 1000
*.sensor3.app[1].sendInterval = 1s
*.sensor3.app[1].startTime = exponential(1s)
*.sensor3.app[1].messageLength = 10Byte

*.lamp*.numApps = 1
*.lamp*.app[0].typename = "UdpSink"
*.lamp*.app[0].localPort = 1000

*.controller.forwarding = true

#*.visualizer.*.mediumVisualizer.displaySignals = true

*.visualizer.*.routingTableVisualizer.displayRoutingTables = true
*.visualizer.*.routingTableVisualizer.lineShift = 1
*.visualizer.*.routingTableVisualizer.lineContactSpacing = 0.5

*.visualizer.*.interfaceTableVisualizer.displayInterfaceTables = true

*.configurator.config = xmldoc("configurator.xml")
*.configurator.addStaticRoutes = false

**.arpType = "GlobalArp"

**.netmaskRoutes = ""

**.displayCommunicationRanges = true
**.displayCommunicationRange = true

[Config BMac2]
extends = SensorNetworkLamps2

**.wlan[*].macType = "BMac"

[Config LMac2]
extends = SensorNetworkLamps2

**.wlan[*].macType = "LMac"

[Config XMac2]
extends = SensorNetworkLamps2

**.wlan[*].macType = "XMac"

[Config StarTopology]
extends = SensorNetworkLamps2
description = "another base network which extends base network with star topology configurator settings"

*.configurator.config = xmldoc("startopology.xml")

*.visualizer.*.routingTableVisualizer.displayRoutesIndividually = false
*.visualizer.*.routingTableVisualizer.lineShift = 0
*.visualizer.*.routingTableVisualizer.displayLabels = false

[Config BMacLampNetworkStar]
extends = StarTopology
description = "lamp network, BMac + star topology"

**.wlan[*].macType = "BMac"

[Config LMacLampNetworkStar]
extends = StarTopology
description = "lamp network, LMac + star topology"

**.wlan[*].macType = "LMac"

[Config XMacLampNetworkStar]
extends = StarTopology
description = "lamp network, XMac + star topology"

**.wlan[*].macType = "XMac"

[Config MeshTopology]
extends = SensorNetworkLamps2

#*.configurator.config = xml("<config><interface hosts='**' address='10.x.x.x' netmask='255.x.x.x' /><autoroute metric='errorRate'/></config>")
*.configurator.config = xmldoc("meshtopology.xml")
*.configurator.addStaticRoutes = true

*.visualizer.*.routingTableVisualizer.displayRoutesIndividually = false
*.visualizer.*.routingTableVisualizer.lineShift = 0
*.visualizer.*.routingTableVisualizer.displayLabels = false

[Config BMacLampNetworkMesh]
extends = MeshTopology
description = "lamp network, BMac + mesh topology"

**.wlan[*].macType = "BMac"

[Config LMacLampNetworkMesh]
extends = MeshTopology
description = "lamp network, LMac + mesh topology"

**.wlan[*].macType = "LMac"

[Config XMacLampNetworkMesh]
extends = MeshTopology
description = "lamp network, XMac + mesh topology"

**.wlan[*].macType = "XMac"

[Config SensorNetwork2Base]
extends = SensorNetworkShowcaseBase

*.visualizer.*.routingTableVisualizer.displayRoutesIndividually = false
*.visualizer.*.routingTableVisualizer.lineShift = 0
*.visualizer.*.routingTableVisualizer.displayLabels = false

*.visualizer.*.networkRouteVisualizer.displayRoutes = true
*.visualizer.*.networkRouteVisualizer.lineShift = 1

#*.configurator.config = xmldoc("startopology2.xml")
#*.configurator.dumpConfig = "dump1.xml"
*.configurator.config = xmldoc("dump2.xml")
*.configurator.addStaticRoutes = false

[Config SensorNetwork2BMac]
extends = SensorNetwork2Base

**.wlan[*].macType = "BMac"

[Config SensorNetwork2LMac]
extends = SensorNetwork2Base

**.wlan[*].macType = "LMac"

**.mac.slotDuration = 50ms

[Config SensorNetwork2XMac]
extends = SensorNetwork2Base

**.wlan[*].macType = "XMac"

[Config SensorNetwork2XMac_2]
extends = SensorNetwork2XMac
network = SensorNetworkShowcaseB_2

**.wlan[*].macType = "XMac"

*.configurator.config = xmldoc("dump2_2.xml")